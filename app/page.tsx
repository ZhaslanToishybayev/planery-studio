"use client";
import AngledStack from "@/components/AngledStack";
import PricingCard from "@/components/PricingCard";
import CheckoutModal from "@/components/CheckoutModal";
import TestimonialCard from "@/components/TestimonialCard";
import TrustBadges from "@/components/TrustBadges";
import SocialProof from "@/components/SocialProof";
import Header from "@/components/Header";
import HeroBadges from "@/components/HeroBadges";
import ProductFeatures from "@/components/ProductFeatures";
import FAQAccordion from "@/components/FAQAccordion";
import Footer from "@/components/Footer";
import FloatingElement from "@/components/FloatingElement";
import ScrollProgress from "@/components/ScrollProgress";

import BeforeAfterSlider from "@/components/BeforeAfterSlider";
import ComparisonTable from "@/components/ComparisonTable";
import StickyCTA from "@/components/StickyCTA";
import CountdownTimer from "@/components/CountdownTimer";
import ProductGallery from "@/components/ProductGallery";
import CookieConsent from "@/components/CookieConsent";
import DecorativeBlob from "@/components/DecorativeBlob";
import AnimatedSection from "@/components/AnimatedSection";
import ProductQuiz from "@/components/ProductQuiz";
import { useState } from "react";

export default function Page() {
  const [isCheckoutOpen, setIsCheckoutOpen] = useState(false);
  const [selectedProduct, setSelectedProduct] = useState({
    title: "",
    price: "",
  });
  const [isQuizOpen, setIsQuizOpen] = useState(false);

  const handleBuyClick = (title: string, price: string) => {
    setSelectedProduct({ title, price });
    setIsCheckoutOpen(true);
  };

  const handleQuizComplete = (recommendation: string) => {
    setIsQuizOpen(false);
    
    // Scroll to pricing –∏ –≤—ã–¥–µ–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω
    setTimeout(() => {
      const pricingSection = document.getElementById("pricing");
      if (pricingSection) {
        pricingSection.scrollIntoView({ behavior: "smooth" });
      }
    }, 300);
  };

  const productivityFeatures = [
    {
      title: "–ë–∞–∑–∞ –∑–∞–¥–∞—á",
      description: "–£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–¥–∞—á —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏, —Ç–µ–≥–∞–º–∏ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏",
      icon: "‚úÖ"
    },
    {
      title: "–¢—Ä–µ–∫–µ—Ä –ø—Ä–∏–≤—ã—á–µ–∫",
      description: "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä—ë–º –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π",
      icon: "üìä"
    },
    {
      title: "–ü—Ä–æ–µ–∫—Ç—ã",
      description: "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –±–æ–ª—å—à–∏—Ö —Ü–µ–ª–µ–π —Å –ø–æ–¥–∑–∞–¥–∞—á–∞–º–∏ –∏ –¥–µ–¥–ª–∞–π–Ω–∞–º–∏",
      icon: "üéØ"
    },
    {
      title: "–ë–∞–∑–∞ –∑–∞–º–µ—Ç–æ–∫",
      description: "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–¥–µ–π –∏ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤",
      icon: "üìù"
    },
    {
      title: "–î–∞—à–±–æ—Ä–¥ –æ–±–∑–æ—Ä–∞",
      description: "–í—Å–µ –≤–∞–∂–Ω–æ–µ –Ω–∞ –æ–¥–Ω–æ–º —ç–∫—Ä–∞–Ω–µ: –∑–∞–¥–∞—á–∏, —Ü–µ–ª–∏, –ø—Ä–∏–≤—ã—á–∫–∏",
      icon: "üñ•Ô∏è"
    },
  ];

  const studentFeatures = [
    {
      title: "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
      description: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞–Ω—è—Ç–∏–π –Ω–∞ —Å–µ–º–µ—Å—Ç—Ä",
      icon: "üìÖ"
    },
    {
      title: "–î–µ–¥–ª–∞–π–Ω—ã",
      description: "–¢—Ä–µ–∫–∏–Ω–≥ –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏",
      icon: "‚è∞"
    },
    {
      title: "–ë–∞–∑–∞ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤",
      description: "–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º",
      icon: "üìö"
    },
    {
      title: "–û—Ü–µ–Ω–∫–∏",
      description: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ –∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞",
      icon: "‚≠ê"
    },
  ];

  return (
    <>
      <ScrollProgress />
      <Header />

      <main>
        {/* Hero */}
        <section className="relative border-t border-gray-100 bg-gradient-to-b from-white via-gray-50/50 to-white overflow-hidden">
          {/* Decorative Elements */}
          <DecorativeBlob color="brand" size="xl" position="top-right" opacity={15} />
          <DecorativeBlob color="purple" size="lg" position="bottom-left" opacity={10} animated={false} />
          
          <div className="container-1200 py-10 md:py-14 lg:py-20 grid lg:grid-cols-2 gap-8 items-center relative z-10">
            <AnimatedSection animation="fadeLeft">
              <div className="mb-6 flex flex-wrap gap-3">
                <HeroBadges />
              </div>
              <h1 className="display-lg mb-4">
                –ü–µ—Ä–µ—Å—Ç–∞–Ω—å—Ç–µ —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É.{" "}
                <span className="gradient-text-hero">–ù–∞—á–Ω–∏—Ç–µ –∑–∞ 5 –º–∏–Ω—É—Ç</span>
              </h1>
              <p className="body-lg text-gray-600 mb-8">
                –≠—Å—Ç–µ—Ç–∏—á–Ω—ã–µ <strong>Notion</strong>-—à–∞–±–ª–æ–Ω—ã —Å –≥–æ—Ç–æ–≤—ã–º–∏ –¥–∞—à–±–æ—Ä–¥–∞–º–∏. –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∑–∞–¥–∞—á–∏, —Ç—Ä–µ–∫–µ—Ä—ã, —Ü–µ–ª–∏ –∏ —É—á—ë–±—É ‚Äî –≤—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.{" "}
                <span className="text-accent">–ë–æ–ª–µ–µ 500 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</span> —É–∂–µ –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.
              </p>
              <div className="flex gap-3 flex-wrap">
                <a href="#pricing" className="btn text-lg px-8 h-14">–°–º–æ—Ç—Ä–µ—Ç—å –ø–ª–∞–Ω–µ—Ä—ã</a>
              </div>
              <div className="mt-8 pt-8 border-t border-gray-100">
                <SocialProof />
              </div>
            </AnimatedSection>
            
            <AnimatedSection animation="fadeRight" delay={0.2}>
              <div className="relative">
                <FloatingElement delay={0} duration={4}>
                  <AngledStack
                    images={[
                      "/assets/middle(productivity).png",
                      "/assets/head(productivity).png",
                      "/assets/under(productivity).png",
                    ]}
                    angles={[14, 3, -15]}
                    scales={[1.08, 1.0, 1.08]}
                    aspect="1410/768"
                  />
                </FloatingElement>
              </div>
            </AnimatedSection>
        </div>
      </section>

      {/* Productivity Section */}
      <section id="productivity" className="border-t border-gray-100">
        <div className="container-1200 py-16 grid lg:grid-cols-2 gap-10 items-center">
          <div className="relative order-2 lg:order-1">
            <AngledStack
              images={[
                "/assets/middle(productivity).png",
                "/assets/head(productivity).png",
                "/assets/under(productivity).png",
              ]}
              angles={[14, 3, -15]}
              scales={[1.08, 1.0, 1.08]}
              aspect="1410/768"
            />
          </div>
          <div className="order-1 lg:order-2">
            <h2 className="heading mb-4">–ù–∞–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h2>
            <p className="subheading mb-6">
              –ó–∞–¥–∞—á–∏, –ø—Ä–∏–≤—ã—á–∫–∏, –ø—Ä–æ–µ–∫—Ç—ã –∏ –∑–∞–º–µ—Ç–∫–∏ ‚Äî —Å —É–º–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏ –∏ –≤–∏–¥–∞–º–∏.
            </p>
            <ul className="space-y-2 mb-6">
              <li className="flex items-start gap-2 text-gray-700">
                <svg className="w-5 h-5 text-[var(--brand)] flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span>–ë–∞–∑–∞ –∑–∞–¥–∞—á —Å —É–º–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏</span>
              </li>
              <li className="flex items-start gap-2 text-gray-700">
                <svg className="w-5 h-5 text-[var(--brand)] flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span>–¢—Ä–µ–∫–µ—Ä –ø—Ä–∏–≤—ã—á–µ–∫ —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π</span>
              </li>
              <li className="flex items-start gap-2 text-gray-700">
                <svg className="w-5 h-5 text-[var(--brand)] flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span>–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∑–∞–º–µ—Ç–æ–∫</span>
              </li>
            </ul>
            <div className="mb-6">
              <ProductFeatures features={productivityFeatures} title="–ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ" />
            </div>
            <button 
              onClick={() => handleBuyClick("–ù–∞–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", "4 990 ‚Ç∏")}
              className="btn"
            >
              –û–ø–ª–∞—Ç–∏—Ç—å <span className="font-bold">4 990‚Ç∏</span> <span className="line-through text-gray-400 ml-2">10 000‚Ç∏</span>
            </button>
          </div>
        </div>
      </section>

      {/* Student Section */}
      <section id="student" className="border-t border-gray-100">
        <div className="container-1200 py-16 grid lg:grid-cols-2 gap-10 items-center">
          <div>
            <h2 className="heading mb-4">–î—ç—à–±–æ—Ä–¥ —Å—Ç—É–¥–µ–Ω—Ç–∞</h2>
            <p className="subheading mb-6">
              –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –¥–µ–¥–ª–∞–π–Ω—ã, –∫–æ–Ω—Å–ø–µ–∫—Ç—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º.
            </p>
            <ul className="space-y-2 mb-6">
              <li className="flex items-start gap-2 text-gray-700">
                <svg className="w-5 h-5 text-[var(--brand)] flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</span>
              </li>
              <li className="flex items-start gap-2 text-gray-700">
                <svg className="w-5 h-5 text-[var(--brand)] flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span>–¢—Ä–µ–∫–∏–Ω–≥ –¥–µ–¥–ª–∞–π–Ω–æ–≤</span>
              </li>
              <li className="flex items-start gap-2 text-gray-700">
                <svg className="w-5 h-5 text-[var(--brand)] flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span>–ë–∞–∑–∞ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º</span>
              </li>
            </ul>
            <div className="mb-6">
              <ProductFeatures features={studentFeatures} title="–ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ" />
            </div>
            <button 
              onClick={() => handleBuyClick("–î—ç—à–±–æ—Ä–¥ —Å—Ç—É–¥–µ–Ω—Ç–∞", "3 490 ‚Ç∏")}
              className="btn"
            >
              –û–ø–ª–∞—Ç–∏—Ç—å <span className="font-bold">3 490‚Ç∏</span> <span className="line-through text-gray-400 ml-2">7 000‚Ç∏</span>
            </button>
          </div>
          <div className="relative">
            <AngledStack
              images={[
                "/assets/middle(student).png",
                "/assets/header(student).png",
                "/assets/under(student).png",
              ]}
              angles={[14, 3, -15]}
              scales={[1.08, 1.0, 1.08]}
              aspect="1410/768"
            />
          </div>
        </div>
      </section>

      {/* Before/After Comparison */}
      <section className="relative border-t border-gray-100 bg-gradient-to-br from-gray-50 via-white to-gray-50 overflow-hidden">
        <DecorativeBlob color="green" size="md" position="top-left" opacity={12} />
        <div className="container-1200 py-20 relative z-10">
          <AnimatedSection animation="fadeUp">
            <div className="text-center mb-12">
              <h2 className="display-md mb-4">
                –ñ–∏–∑–Ω—å <span className="gradient-text">–¥–æ</span> –∏ <span className="gradient-text-accent">–ø–æ—Å–ª–µ</span> Planery
              </h2>
              <p className="body-lg text-gray-600">
                –ü–µ—Ä–µ—Ç—è–Ω–∏—Ç–µ —Å–ª–∞–π–¥–µ—Ä, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–∞–∑–Ω–∏—Ü—É
              </p>
            </div>
          </AnimatedSection>
          <AnimatedSection animation="scale" delay={0.2}>
            <div className="max-w-4xl mx-auto">
              <BeforeAfterSlider />
            </div>
          </AnimatedSection>
          <AnimatedSection animation="fadeUp" delay={0.4}>
            <div className="text-center mt-12">
              <a href="#pricing" className="btn-success text-lg px-8 h-14">
                –°–º–æ—Ç—Ä–µ—Ç—å –ø–ª–∞–Ω–µ—Ä—ã
              </a>
            </div>
          </AnimatedSection>
        </div>
      </section>

      {/* Pricing Section */}
      <section id="pricing" className="relative border-t border-gray-100 bg-gradient-to-b from-white via-[var(--brand-50)]/30 to-white overflow-hidden">
        <DecorativeBlob color="purple" size="xl" position="top-right" opacity={8} />
        <DecorativeBlob color="pink" size="lg" position="bottom-left" opacity={8} />
        
        <div className="container-1200 py-16 md:py-20 relative z-10">
          <AnimatedSection animation="fadeUp">
            <div className="text-center mb-12">
              <h2 className="display-md mb-4">
                <span className="gradient-text-hero">–ù–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã</span>
              </h2>
              <p className="body-lg text-gray-600">
                –†–∞–∑–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂. –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø. –í—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ.
              </p>
            </div>
          </AnimatedSection>

          {/* Countdown Timer */}
          <div className="mb-12 max-w-2xl mx-auto">
            <CountdownTimer />
          </div>

          <div className="grid md:grid-cols-3 gap-6 md:gap-8 mb-12 md:mb-16 px-2 md:px-0">
            <PricingCard
              title="–ù–∞–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
              price="4 990 ‚Ç∏"
              originalPrice="10 000 ‚Ç∏"
              description="–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏"
              features={[
                "–ë–∞–∑–∞ –∑–∞–¥–∞—á —Å —É–º–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏",
                "–¢—Ä–µ–∫–µ—Ä –ø—Ä–∏–≤—ã—á–µ–∫",
                "–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤",
                "–ë–∞–∑–∞ –∑–∞–º–µ—Ç–æ–∫ –∏ –∏–¥–µ–π",
                "–ì–æ—Ç–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è (–∫–∞–Ω–±–∞–Ω, –∫–∞–ª–µ–Ω–¥–∞—Ä—å)",
                "–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
              ]}
              onBuyClick={() => handleBuyClick("–ù–∞–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", "4 990 ‚Ç∏")}
              buttonText="–û–ø–ª–∞—Ç–∏—Ç—å"
            />

            <PricingCard
              title="–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä"
              price="6 990 ‚Ç∏"
              originalPrice="9 980 ‚Ç∏"
              description="–í—Å–µ —à–∞–±–ª–æ–Ω—ã —Å–æ —Å–∫–∏–¥–∫–æ–π 30%"
              features={[
                "–í—Å—ë –∏–∑ –Ω–∞–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
                "–î—ç—à–±–æ—Ä–¥ —Å—Ç—É–¥–µ–Ω—Ç–∞",
                "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π",
                "–¢—Ä–µ–∫–∏–Ω–≥ –¥–µ–¥–ª–∞–π–Ω–æ–≤",
                "–ë–∞–∑–∞ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤",
                "–≠–∫–æ–Ω–æ–º–∏—è 2 990 ‚Ç∏",
                "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
              ]}
              isPopular={true}
              badge="üî• –í—ã–≥–æ–¥–Ω–µ–µ –Ω–∞ 30%"
              onBuyClick={() => handleBuyClick("–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä", "6 990 ‚Ç∏")}
              buttonText="–û–ø–ª–∞—Ç–∏—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π"
            />

            <PricingCard
              title="–î—ç—à–±–æ—Ä–¥ —Å—Ç—É–¥–µ–Ω—Ç–∞"
              price="3 490 ‚Ç∏"
              originalPrice="7 000 ‚Ç∏"
              description="–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —É—á—ë–±—ã –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –∏–ª–∏ —à–∫–æ–ª–µ"
              features={[
                "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π",
                "–ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–µ–¥–ª–∞–π–Ω–æ–≤",
                "–ë–∞–∑–∞ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º",
                "–¢—Ä–µ–∫–∏–Ω–≥ –æ—Ü–µ–Ω–æ–∫",
                "–£—á–µ–±–Ω—ã–µ —Ü–µ–ª–∏",
                "–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
              ]}
              onBuyClick={() => handleBuyClick("–î—ç—à–±–æ—Ä–¥ —Å—Ç—É–¥–µ–Ω—Ç–∞", "3 490 ‚Ç∏")}
              buttonText="–û–ø–ª–∞—Ç–∏—Ç—å"
            />
          </div>

          <div className="mb-12">
            <TrustBadges />
          </div>


        </div>
      </section>

      {/* Product Gallery */}
      <section className="border-t border-gray-100">
        <div className="container-1200 py-20">
          <div className="text-center mb-12">
            <h2 className="heading mb-4">–ó–∞–≥–ª—è–Ω–µ–º –≤–Ω—É—Ç—Ä—å</h2>
            <p className="subheading">
              –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç —à–∞–±–ª–æ–Ω—ã –∏–∑–Ω—É—Ç—Ä–∏
            </p>
          </div>
          <ProductGallery />
        </div>
      </section>

      {/* Testimonials */}
      <section className="border-t border-gray-100">
        <div className="container-1200 py-20">
          <div className="text-center mb-12">
            <h2 className="heading mb-4">–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
            <p className="subheading">
              –ë–æ–ª–µ–µ 500 —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —É–ª—É—á—à–∏–ª–∏ —Å–≤–æ—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –Ω–∞—à–∏–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            <TestimonialCard
              name="–ê–ª–∏–Ω–∞ –ö–∞—Å—ã–º–æ–≤–∞"
              role="–°—Ç—É–¥–µ–Ω—Ç–∫–∞, 3 –∫—É—Ä—Å"
              avatar="–ê–ö"
              rating={5}
              text="–†–∞–Ω—å—à–µ —É –º–µ–Ω—è –±—ã–ª–∏ –¥–µ–¥–ª–∞–π–Ω—ã –≤–µ–∑–¥–µ: –≤ –±–ª–æ–∫–Ω–æ—Ç–µ, —Ç–µ–ª–µ—Ñ–æ–Ω–µ, —Å—Ç–∏–∫–µ—Ä–∞—Ö. –¢–µ–ø–µ—Ä—å –≤—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ. –ó–∞ —Å–µ–º–µ—Å—Ç—Ä –Ω–∏ —Ä–∞–∑—É –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∞ –∑–∞–¥–∞–Ω–∏–µ!"
            />
            <TestimonialCard
              name="–î–∞–Ω–∏—è—Ä –ù—É—Ä–ª–∞–Ω–æ–≤"
              role="–§—Ä–∏–ª–∞–Ω—Å–µ—Ä-–¥–∏–∑–∞–π–Ω–µ—Ä"
              avatar="–î–ù"
              rating={5}
              text="–ü–µ—Ä–µ–ø—Ä–æ–±–æ–≤–∞–ª –∫—É—á—É —Å–∏—Å—Ç–µ–º. Planery ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —á—Ç–æ –Ω–µ –∑–∞–±—Ä–æ—Å–∏–ª. –ü—Ä–æ—Å—Ç–æ–π, –Ω–æ –º–æ—â–Ω—ã–π. –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º, –∫–ª–∏–µ–Ω—Ç—ã –¥–æ–≤–æ–ª—å–Ω—ã."
            />
            <TestimonialCard
              name="–ê–π–≥–µ—Ä–∏–º –°–∞—Ä—Å–µ–Ω–æ–≤–∞"
              role="–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤"
              avatar="–ê–°"
              rating={5}
              text="–ö—É–ø–∏–ª–∞ –Ω–∞–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –≤–ª—é–±–∏–ª–∞—Å—å –≤ —Ç—Ä–µ–∫–µ—Ä –ø—Ä–∏–≤—ã—á–µ–∫. –ó–∞ 2 –º–µ—Å—è—Ü–∞ –≤–Ω–µ–¥—Ä–∏–ª–∞ —É—Ç—Ä–µ–Ω–Ω—é—é –∑–∞—Ä—è–¥–∫—É –∏ —á—Ç–µ–Ω–∏–µ. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ä–µ–∞–ª—å–Ω–æ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç!"
            />
          </div>
        </div>
      </section>

      {/* Final CTA */}
      <section className="relative border-t border-gray-100 bg-gradient-to-br from-[var(--brand-50)] via-[var(--accent-purple)]/5 to-[var(--accent-pink)]/5 overflow-hidden">
        <DecorativeBlob color="brand" size="xl" position="center" opacity={10} animated />
        
        <div className="container-1200 py-20 text-center relative z-10">
          <AnimatedSection animation="scale">
            <h3 className="display-md mb-4">
              –ù–∞—á–Ω–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å <span className="gradient-text-animated">–∂–∏–∑–Ω—å —Å–µ–≥–æ–¥–Ω—è</span>
            </h3>
            <p className="body-lg text-gray-600 mb-8">
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ 500+ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ—é –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </p>
            <a href="#pricing" className="btn text-lg px-8 h-14 inline-flex items-center gap-2">
              <span>–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω–µ—Ä</span>
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
              </svg>
            </a>
            <div className="mt-6 text-sm text-gray-600 flex items-center justify-center gap-6 flex-wrap">
              <span className="flex items-center gap-2">
                <svg className="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
              </span>
              <span className="flex items-center gap-2">
                <svg className="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                –ü–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
              </span>
              <span className="flex items-center gap-2">
                <svg className="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞
              </span>
            </div>
          </AnimatedSection>
        </div>
      </section>

      {/* FAQ Section */}
      <section id="faq" className="border-t border-gray-100">
        <div className="container-1200 py-20">
          <div className="text-center mb-12">
            <h2 className="heading mb-4">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
            <p className="subheading">
              –í—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π
            </p>
          </div>
          <FAQAccordion />
        </div>
      </section>

      {/* Footer */}
      <Footer />

      {/* Sticky CTA */}
      <StickyCTA />



      {/* Cookie Consent */}
      <CookieConsent />

      {/* Product Quiz */}
      {isQuizOpen && (
        <ProductQuiz
          onComplete={handleQuizComplete}
          onClose={() => setIsQuizOpen(false)}
        />
      )}

      {/* Checkout Modal */}
      <CheckoutModal
        isOpen={isCheckoutOpen}
        onClose={() => setIsCheckoutOpen(false)}
        productTitle={selectedProduct.title}
        productPrice={selectedProduct.price}
      />
      </main>
    </>
  );
}
