#!/bin/bash

echo "Creating and uploading orders management..."
cat > lib/orders.ts << 'ORDERS_EOF'
export interface Order {
  id: string;
  email: string;
  productId: string;
  productName: string;
  amount: number;
  status: 'pending' | 'paid' | 'failed' | 'cancelled';
  createdAt: Date;
  paidAt?: Date;
  downloadLinks: string[];
}

// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
// –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
const orders: Order[] = [];

export function createOrder(
  email: string,
  productId: string,
  productName: string,
  amount: number,
  downloadLinks: string[]
): Order {
  const order: Order = {
    id: generateOrderId(),
    email,
    productId,
    productName,
    amount,
    status: 'pending',
    createdAt: new Date(),
    downloadLinks,
  };

  orders.push(order);
  return order;
}

export function getOrderById(id: string): Order | undefined {
  return orders.find(order => order.id === id);
}

export function updateOrderStatus(id: string, status: Order['status']): boolean {
  const order = orders.find(o => o.id === id);
  if (order) {
    order.status = status;
    if (status === 'paid') {
      order.paidAt = new Date();
    }
    return true;
  }
  return false;
}

export function getOrdersByEmail(email: string): Order[] {
  return orders.filter(order => order.email === email);
}

function generateOrderId(): string {
  const timestamp = Date.now().toString(36);
  const random = Math.random().toString(36).substr(2, 5);
  return `ORD-${timestamp}-${random}`.toUpperCase();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞
export function getProductDownloadLinks(productId: string): string[] {
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ —ç—Ç–æ –±—ã–ª–æ –±—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  const productLinks: Record<string, string[]> = {
    'student-planner': [
      'https://drive.google.com/file/d/1ABC123/view',
      'https://drive.google.com/file/d/1DEF456/view',
    ],
    'productivity-system': [
      'https://drive.google.com/file/d/1GHI789/view',
      'https://drive.google.com/file/d/1JKL012/view',
    ],
  };

  return productLinks[productId] || [];
}
ORDERS_EOF

gh api repos/ZhaslanToishybayev/planery-studio/contents/lib/orders.ts --method PUT \
  --field message="Add order management system" \
  --field content="$(base64 -w 0 lib/orders.ts)" \
  --field branch=main

echo "Creating and uploading site configuration..."
cat > lib/siteConfig.ts << 'CONFIG_EOF'
export const siteConfig = {
  name: 'Planery Studio',
  description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã Notion –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π',
  url: process.env.NEXT_PUBLIC_SITE_URL || 'https://planerystudio.com',
  ogImage: '/assets/planery-logo.png',
  links: {
    twitter: 'https://twitter.com/planerystudio',
    github: 'https://github.com/planerystudio',
    instagram: 'https://instagram.com/planerystudio',
    telegram: 'https://t.me/planerystudio',
    email: 'mailto:support@planerystudio.com',
  },
  social: {
    twitter: '@planerystudio',
    instagram: '@planerystudio',
    telegram: '@planerystudio',
  },
  contact: {
    email: 'support@planerystudio.com',
    telegram: 'https://t.me/planerystudio',
    instagram: 'https://instagram.com/planerystudio',
  },
  analytics: {
    googleAnalytics: process.env.NEXT_PUBLIC_GA_ID,
    yandexMetrika: process.env.NEXT_PUBLIC_YM_ID,
  },
  payment: {
    robokassa: {
      merchantId: process.env.ROBOKASSA_MERCHANT_ID,
      testMode: process.env.ROBOKASSA_TEST_MODE === 'true',
    },
  },
  seo: {
    title: 'Planery Studio - –®–∞–±–ª–æ–Ω—ã Notion –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π',
    description: '–ö—É–ø–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã Notion –¥–ª—è —É—á–µ–±—ã, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ì–æ—Ç–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –≤—Å–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –±—ã—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ.',
    keywords: [
      'Notion —à–∞–±–ª–æ–Ω—ã',
      '–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å—Ç—É–¥–µ–Ω—Ç–∞',
      '—Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      '–æ—Ä–≥–∞–Ω–∞–π–∑–µ—Ä –¥–ª—è —É—á–µ–±—ã',
      '—à–∞–±–ª–æ–Ω—ã –¥–ª—è Notion',
      '–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏',
      '—É—á–µ–±–∞ –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ',
      '–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
    ],
  },
  features: [
    '–ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã Notion',
    '–î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π',
    '–ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞',
    '–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ',
    '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7',
  ],
  testimonials: [
    {
      name: '–ê–Ω–Ω–∞ –ö.',
      role: '–°—Ç—É–¥–µ–Ω—Ç–∫–∞ –ú–ì–£',
      content: '–®–∞–±–ª–æ–Ω—ã –ø–æ–º–æ–≥–ª–∏ –º–Ω–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —É—á–µ–±—É –∏ –ø–æ–≤—ã—Å–∏—Ç—å —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å!',
      avatar: '/assets/testimonial-1.jpg',
    },
    {
      name: '–î–º–∏—Ç—Ä–∏–π –°.',
      role: '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å',
      content: '–û—Ç–ª–∏—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!',
      avatar: '/assets/testimonial-2.jpg',
    },
  ],
  faq: [
    {
      question: '–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —à–∞–±–ª–æ–Ω–∞–º –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏?',
      answer: '–°—Å—ã–ª–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à email –≤ —Ç–µ—á–µ–Ω–∏–µ 5-10 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.',
    },
    {
      question: '–ù—É–∂–Ω–æ –ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å Notion?',
      answer: '–î–∞, —à–∞–±–ª–æ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ Notion. –≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞ –ª—é–±–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.',
    },
    {
      question: '–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω—ã –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã?',
      answer: '–ö–æ–Ω–µ—á–Ω–æ! –í—Å–µ —à–∞–±–ª–æ–Ω—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ. –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å, —É–¥–∞–ª—è—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å –ª—é–±—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã.',
    },
    {
      question: '–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞?',
      answer: '–î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π, –µ—Å–ª–∏ —à–∞–±–ª–æ–Ω—ã –Ω–µ –ø–æ–¥–æ—à–ª–∏.',
    },
  ],
};
CONFIG_EOF

gh api repos/ZhaslanToishybayev/planery-studio/contents/lib/siteConfig.ts --method PUT \
  --field message="Add centralized site configuration" \
  --field content="$(base64 -w 0 lib/siteConfig.ts)" \
  --field branch=main

echo "Creating and uploading documentation files..."
cat > EMAIL_DELIVERY_SETUP.md << 'EMAIL_DOC_EOF'
# üìß –ù–ê–°–¢–†–û–ô–ö–ê EMAIL –î–û–°–¢–ê–í–ö–ò

## –û–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã

–ü—Ä–æ–µ–∫—Ç –≤–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ø—Ä–∞–≤–∫—É email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞.

## –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã

### 1. Email —Å–µ—Ä–≤–∏—Å (`lib/email.ts`)
- –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ Gmail SMTP
- HTML –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ –ø–∏—Å–µ–º
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤

### 2. –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤ (`lib/orders.ts`)
- –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º–∏ –∑–∞–∫–∞–∑–æ–≤
- –•—Ä–∞–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è

### 3. API –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π (`app/api/robokassa/`)
- –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π
- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø–ª–∞—Ç—ã
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ email –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞

### 1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–î–æ–±–∞–≤—å—Ç–µ –≤ `.env.local`:

```env
# Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password

# Robokassa –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ROBOKASSA_MERCHANT_ID=your-merchant-id
ROBOKASSA_PASSWORD_1=your-password-1
ROBOKASSA_PASSWORD_2=your-password-2
ROBOKASSA_TEST_MODE=true
```

### 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gmail

1. –í–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ Gmail
2. –°–æ–∑–¥–∞–π—Ç–µ App Password:
   - Google Account ‚Üí Security ‚Üí 2-Step Verification ‚Üí App passwords
   - –í—ã–±–µ—Ä–∏—Ç–µ "Mail" –∏ "Other (Custom name)"
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–æ–ª—å –≤ `EMAIL_PASS`

### 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vercel

–í Vercel Dashboard ‚Üí Settings ‚Üí Environment Variables –¥–æ–±–∞–≤—å—Ç–µ:

```
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password
ROBOKASSA_MERCHANT_ID=your-merchant-id
ROBOKASSA_PASSWORD_1=your-password-1
ROBOKASSA_PASSWORD_2=your-password-2
ROBOKASSA_TEST_MODE=true
```

## –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã

1. **–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞**: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –æ–ø–ª–∞—Ç–µ
2. **–û–ø–ª–∞—Ç–∞**: –°–æ–∑–¥–∞–µ—Ç—Å—è –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ Robokassa API
3. **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ**: –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã Robokassa –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
4. **Email –æ—Ç–ø—Ä–∞–≤–∫–∞**: –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ

## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

```bash
# –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç
npm run dev

# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API endpoints
curl -X POST http://localhost:3000/api/robokassa/create \
  -H "Content-Type: application/json" \
  -d '{
    "amount": 1000,
    "description": "Test order",
    "orderId": "TEST-001",
    "email": "test@example.com"
  }'
```

### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ email

1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
2. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º" –≤ Gmail

## –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

- ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ App Passwords –¥–ª—è Gmail
- ‚úÖ –•—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
- ‚úÖ –í–∫–ª—é—á–∏—Ç–µ HTTPS –¥–ª—è production
- ‚úÖ –í–∞–ª–∏–¥–∏—Ä—É–π—Ç–µ –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ
- ‚úÖ –õ–æ–≥–∏—Ä—É–π—Ç–µ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –∑–∞–∫–∞–∑–∞–º–∏

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

### –õ–æ–≥–∏
- –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å
- –û—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è
- –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è

### –ú–µ—Ç—Ä–∏–∫–∏
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö email
- –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω—ã—Ö –¥–æ—Å—Ç–∞–≤–æ–∫
- –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤

## Troubleshooting

### Email –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ App Password –≤ Gmail
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ 2FA –≤–∫–ª—é—á–µ–Ω–∞
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏ SMTP

### Robokassa –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Merchant ID –∏ –ø–∞—Ä–æ–ª–∏
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ test mode –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL callback'–æ–≤

### –ó–∞–∫–∞–∑—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö

## –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞

### –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ email —à–∞–±–ª–æ–Ω—ã
- –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö
- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é

### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
- Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
- SMS –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
- Webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

### –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏–π email
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —Å—Å—ã–ª–∫–∞–º
- A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤
EMAIL_DOC_EOF

gh api repos/ZhaslanToishybayev/planery-studio/contents/EMAIL_DELIVERY_SETUP.md --method PUT \
  --field message="Add email delivery setup documentation" \
  --field content="$(base64 -w 0 EMAIL_DELIVERY_SETUP.md)" \
  --field branch=main

echo "All remaining files uploaded successfully!"
